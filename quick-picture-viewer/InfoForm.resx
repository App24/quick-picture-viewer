<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="logoPictureBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        TkSuQmCC
</value>
  </data>
</root>