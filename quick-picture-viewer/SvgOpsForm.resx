<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="logoPictureBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>