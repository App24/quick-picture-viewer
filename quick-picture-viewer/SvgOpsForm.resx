<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="okButton.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wwAADsMBx2+oZAAAAGZJREFUOE/VjzEKgDAQBO9bKtio//+FmvgI3REECRa5KwIOTJFiJ5y14vwwRC9X
        GQpMcpOddAcY75IxuALlGKoDs2TM7W7ajt83jTJLbq/mCfBzksP9ckBgkaExEDgkkRAESn+B2QXamyDY
        CyfAWwAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="closeBtn.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABGdBTUEAALGPC/xhBQAAAIRJREFUOE/N
        kl0KgCAQhL1W9VAE9dLPBeuGdYjm03wQRBQf6oOBXd0ZVtD8ilOaXJlklg5XhgzSJaVCuGOmt12ERmJg
        t10IZ9wxk6SVGNxs58g2ewi5JUIQZs6KGCWMiLqYqgDW5gms3b31KmXBIAaMnuyQmNnjQxbbRaj+SNVf
        +QuMeQB5NR9VOH73IwAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="logoPictureBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>