<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="logoPictureBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAGAAAABgCAYAAADimHc4AAAABGdBTUEAALGPC/xhBQAABbhJREFUeF7t
        mc1vG1UUxQMCWjawByRU8SHE54INUJEEVBYVokoCbYoQiFVLxaJiBTuyAQFiUxZFRYg/wFXsGYLdoNoz
        lHgmEU1bgQRLNlRQQESUFtFWIsN97gG9mVw3yct1/cbcn3QWyX1z5txre/xmPKQoiqIoiqIoiqIoiqIo
        iqIoiqIoytVky8FzWS8Ee2U1uOFJCPbKanDDkxDsldXghich2JeH+3ZWbhgdr78yMlY/PjJeX4K+Gp6o
        7314z+L1WCYONzwJwb5niM7ryZ0zt5LRSTLIeDVObN0R3oLlonDDkxDse4LovEZfjjfTQV+vNFmhU9u3
        NzbhMDG44UkI9uKIz4sWvlY4sKuGx+r7cZgY3PAkBHtxaA6y88I1jDUoanLfbBZEiai44UmIO5eEdu2d
        ZWfDib4PFjDm7oxM1M9zB3N6arLBhtqIuOFJiDuXhLbt4mfD6YmJ+p8Yc3f0BVif5F8A2joVD+ym3XoJ
        yibXcQkizWPM3Rker7/KHMhrrLEPhzlTjZP7a1HS+rchbngSsocGfT4Tp/cghjPi8zJbJVq8pm2VufnA
        YeumkqY3hq3kfRrEJXsw3PAkZJ/D0qValL5dqXzr3EdP5tXrG7Gg+eW9QSv5hhkIOzwJBVH7CHe+y0oX
        q825uxFv3fRkXoVb6wvQhh9F0OXmWRrGeX4QyWfc8CRkzh200sfCKPmCOa/RH1Qf74R0oFfzEiWIk9ep
        0b8LjZPS72kwT5s13PAk1AlAZFl2TRi3X6A3wU8rcyTLtVYyhaWDg2k6iNMPuYZJB+I43oylV+1OuNFY
        uIle9EPIUMz10dRUdi2Wlh9q9F2myQv0bnsRS/6DG56EYL8C+vS9ZLIUshl9gCXlJozT/Uxzv5rrMZbk
        4IYnIdizmCyU6bdCxoz+/waWlJMwau+gRnLXfPo0/BIcSx/AkhVww5MQ7LtSjeYe6mSzspKW6XvrOSwp
        F3R5uYMa+L3Q0NKVhm+gYX3XC8H+ioTNhQeZzGc3skXtC+bGhvb5JwuN/EU3XsNY4i1BPL+NsuZuDkmn
        Di16spVcC2GcvFloIKM7zj0oew/3vWV6QtlvOne5UXLRDk/Dn0a5NNAn+LDdA+mi6Q1lf6Ggs4XgpytH
        F29GuTSYzJT9h0Ivsyj7SdBsP14InNVa6fMolw6zAyr2U43SEZT9gwJHucD0N0qlJYjaR3M9RUkTJb/A
        Fi53W1+GXc9qVJvJo3ZPpGXzGwbK/oDnKlbQdhul0kO95Z6g0t8HUfKDzr7f3GTlQrYnUC49QWvuGbs3
        0pL9ALHv4JGDHfBnCngdyqXH9EI9ncn16NMjijBKP86FG5QniRbU04FCj5+g1F86z/qj5Ec73CB8+Rap
        xXOjdo/mBx3TO8r9Y+bYwl35YMnZUj03WSONRmMT9XbO7jWM0ztR7h9hnOy2Q9E74whKAwf118z1Grcn
        UeofQZS+lwsVJW+hNHDQ9jP/y14reQel/kHvgqodynwiUBo4Lv+Yn3sBDqPUP2pRcsIO9WncfgSlgSOM
        5rfavZKOo9Q/KERuBzQdL9yG0sAx3Uput3slnUapd2xhfl+VEOy9gcsoIdi7w5lKCPbewGWUEOzd4Uwl
        BHtv4DJKCPbucKYSgr03cBklBHt3OFMJwd4buIwSgr07nKmEYO8NXEYJwd4dzlRCsPcGLqOEYO8OZyoh
        2HsDl1FCsHeHM5UQ7L2Byygh2LvDmUoI9t7AZZQQ7N3hTCUEe2/gMkoI9u5wphKCvTdwGSUEe3c4UwnB
        3hu4jBKCvTucqYRg7w1cRgnB3h3OVEKw9wYuo4Rg7w5nKiHYewOXUUKwd4czlRDsvYHLKCHYu8OZSgj2
        3sBllBDs3eFMJQR7b+AySgj27nCmEoK9N3AZJQR7dzhTCcHeG7iMEoK9O5yphGDvDVxGCcFeURRFURRF
        URRFURRFURRFUZT/LUND/wD2lXOmnKp+hgAAAABJRU5ErkJggg==
</value>
  </data>
</root>