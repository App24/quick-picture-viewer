<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="okButton.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wwAADsMBx2+oZAAAAGZJREFUOE/VjzEKgDAQBO9bKtio//+FmvgI3REECRa5KwIOTJFiJ5y14vwwRC9X
        GQpMcpOddAcY75IxuALlGKoDs2TM7W7ajt83jTJLbq/mCfBzksP9ckBgkaExEDgkkRAESn+B2QXamyDY
        CyfAWwAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="logoPictureBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        RK5CYII=
</value>
  </data>
</root>