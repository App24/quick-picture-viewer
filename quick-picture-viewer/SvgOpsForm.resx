<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="okButton.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wwAADsMBx2+oZAAAAGZJREFUOE/VjzEKgDAQBO9bKtio//+FmvgI3REECRa5KwIOTJFiJ5y14vwwRC9X
        GQpMcpOddAcY75IxuALlGKoDs2TM7W7ajt83jTJLbq/mCfBzksP9ckBgkaExEDgkkRAESn+B2QXamyDY
        CyfAWwAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="logoPictureBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>